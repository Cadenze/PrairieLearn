<script>
  $(function () {
    const channel_id = "<%= channel_id%>";
    const expand_button = document.getElementById("expand-button");
    const submit_button = document.getElementById("submit-button");
    const reaction_selector = document.getElementById("reaction-selector");
    const reactions_options = ["üëå", "üëç", "üëé", "üòü", "üòÇ", "üî•", "üéâ"];
    const name = document.getElementById("navbarDropdown").text;
    const socket = io("/chat", {
      query: "name=" + name + "&id=" + channel_id.toString(),
    });
    const chatbox = document.getElementById("float-chatbox");

    var user_count = 0;
    var chat_open = false;
    var local_message_count = 0;
    var offline = true;
    var cache = null;
    var last_message_sender = "";

    // Initalization of UI
    $(function () {
      document.getElementById("expand-button").onclick = openChat;
      document.getElementById("close-button").onclick = closeChat;

      for (var i = 0; i < reactions_options.length; i++) {
        $("#reaction-selector").append(
          $("<li class='reaction'>").text(reactions_options[i])
        );
      }

      if (document.body.clientWidth < 640) {
        expand_button.style.left = "50%";
        expand_button.style.transform = "translate(-50%, 0)";
      }

      // Allow sending message using enter
      $("#msg").keypress(function (e) {
        if (e.which == 13 && !e.shiftKey) {
          $("#submit-button").click();
          e.preventDefault();
        }
      });

      // Overwrite the submit
      $(".form-container").submit(function (e) {
        socket.emit("send", $("#msg").val());
        $("#msg").val("");
        return false;
      });

      // Try to load the history from cache
      cache = localStorage.getItem(channel_id);
      if (cache) {
        cache = $.parseJSON(cache);
        for (let id in cache.msgs) {
          var msg = cache.msgs[id];
          displayMessage(id, msg);
          if (cache.reactions[id]) {
            displayReactionFromCache(id);
          }
        }
      } else {
        cache = {};
        cache.msgs = {};
        cache.reactions = {};
        cache.reactions_voted = {};
        cache.message_read = 0;
      }
    });

    // Initalization of all socket related callback
    $(function () {
      socket.on("connect", function () {
        offline = false;
        expand_button.style.backgroundColor = "#007bff";
        if (cache.message_read == $("#messages .message").length) {
          expand_button.style.backgroundColor = "#007bff";
          expand_button.innerText = "Chat (" + user_count + " Online)";
        } else {
          expand_button.innerText =
            "You have " +
            ($("#messages .message").length - cache.message_read) +
            " unread messages";
          expand_button.style.backgroundColor = "#E84A27";
        }
        submit_button.style.backgroundColor = "#4caf50";
        submit_button.innerText = "Send";
        submit_button.disabled = false;
      });

      socket.on("boardcast", function (msg) {
        var div_id = msg.id.toString();
        displayMessage(div_id, msg);
        if (!chat_open) {
          expand_button.innerText =
            "You have " +
            ($("#messages .message").length - cache.message_read) +
            " unread messages";
          expand_button.style.backgroundColor = "#E84A27";
        } else {
          cache.message_read = $("#messages .message").length;
          localStorage.setItem(channel_id, JSON.stringify(cache));
        }
      });

      socket.on("boardcast reaction", function (msg) {
        var id = msg.id;
        var reaction = msg.reaction;
        displayReactionAdd(id, reaction);
      });

      socket.on("boardcast reaction recall", function (msg) {
        var id = msg.id;
        var reaction = msg.reaction;
        displayReactionDel(id, reaction);
      });

      socket.on("update", function (update) {
        user_count = update.count;
        document.getElementById("users").style.visibility = "visible";
        if (cache.message_read == $("#messages .message").length) {
          expand_button.style.backgroundColor = "#007bff";
          expand_button.innerText = "Chat (" + user_count + " Online)";
        }
        document.getElementById("user-count").innerText =
          "Online User: " + user_count;
        var array = update.name_list.split(",");
        document.getElementById("users").innerHTML = "";
        for (i = 0; i < array.length; i++) {
          $("#users").append($("<li>").text(array[i]));
        }
      });

      socket.on("disconnect", () => {
        offline = true;
        document.getElementById("user-count").innerText = "Offline";
        document.getElementById("users").innerHTML = "";
        document.getElementById("users").style.visibility = "hidden";
        expand_button.style.backgroundColor = "grey";
        expand_button.innerText = "Chat Offline";
        submit_button.style.backgroundColor = "grey";
        submit_button.innerText = "Chat Offline";
        submit_button.disabled = true;
      });
    });

    // Make the chatbox draggable and sticky to the browser boundary
    $(function () {
      dragElement();

      function dragElement() {
        var pos1 = 0,
          pos2 = 0,
          pos3 = 0,
          pos4 = 0;
        if (document.getElementById("chatbox-header")) {
          document.getElementById("chatbox-header").onmousedown = dragMouseDown;
        }
        function dragMouseDown(e) {
          e = e || window.event;
          e.preventDefault();
          // get the mouse cursor position at startup:
          pos3 = e.clientX;
          pos4 = e.clientY;
          document.onmouseup = closeDragElement;
          // call a function whenever the cursor moves:
          document.onmousemove = elementDrag;
        }
        function elementDrag(e) {
          e = e || window.event;
          e.preventDefault();
          // calculate the new cursor position:
          pos1 = pos3 - e.clientX;
          pos2 = pos4 - e.clientY;
          pos3 = e.clientX;
          pos4 = e.clientY;
          // set the element's new position:
          var new_top = chatbox.offsetTop - pos2;
          var new_left = chatbox.offsetLeft - pos1;
          chatbox.style.top = new_top + "px";
          chatbox.style.left = new_left + "px";
        }
        function closeDragElement() {
          /* stop moving when mouse button is released:*/
          document.onmouseup = null;
          document.onmousemove = null;
          checkOutOfBound();
        }
      }

      function checkOutOfBound() {
        var top = parseInt(chatbox.style.top, 10);
        var left = parseInt(chatbox.style.left, 10);
        var w = document.body.clientWidth;
        var h = window.innerHeight;
        if (document.body.clientWidth < 640) {
          expand_button.style.left = "50%";
          expand_button.style.transform = "translate(-50%, 0)";
        } else {
          expand_button.style.left = "unset";
          expand_button.style.transform = "unset";
        }
        if (top < 0) {
          chatbox.style.top = "0px";
          chatbox.style.bottom = "unset";
        } else if (top + 590 > h) {
          chatbox.style.top = "unset";
          chatbox.style.bottom = "0px";
        }
        if (left < 0) {
          chatbox.style.left = "0px";
          chatbox.style.right = "unset";
        } else if (left + 350 > w) {
          chatbox.style.left = "unset";
          chatbox.style.right = "0px";
        }
      }
    });

    function displayMessage(msg_id, msg) {
      if (last_message_sender == "" || last_message_sender != msg.username) {
        var full_msg = msg.username + ": " + msg.message;
        last_message_sender = msg.username;
      } else {
        var full_msg = msg.message;
        local_message_count += 1;
      }
      $("#messages").append($("<div id=" + msg_id + ">"));
      cache.msgs[msg_id] = msg;
      localStorage.setItem(channel_id, JSON.stringify(cache));
      if (local_message_count % 2 == 0) {
        $("#" + msg_id).append(
          $("<li class=\"message\" style='background: #eee;'>")
            .click(reactionSelector)
            .text(full_msg)
        );
        $("#" + msg_id).append(
          $("<ul class=\"reaction-display\" style='background: #eee;'>").text(
            ""
          )
        );
      } else {
        $("#" + msg_id).append(
          $('<li class="message">').click(reactionSelector).text(full_msg)
        );
        $("#" + msg_id).append($('<ul class="reaction-display">').text(""));
      }
      local_message_count += 1;
      document.getElementById(msg_id).scrollIntoView({ behavior: "smooth" });
    }

    function displayReactionFromCache(id) {
      var target_message_div = document.getElementById(id.toString());
      // If we don't have the message of this id, return
      if (target_message_div != null) {
        var reaction_display = target_message_div.getElementsByClassName(
          "reaction-display"
        )[0];
      } else {
        return;
      }
      for (var i = 0; i < reactions_options.length; i++) {
        const reaction = reactions_options[i];
        var reaction_display_li = reaction_display.getElementsByClassName(
          reaction
        );
        if (cache.reactions[id][reaction] !== 0) {
          var block = document.createElement("li");
          block.appendChild(document.createElement("span"));
          block.childNodes[0].innerText =
            reaction + " " + cache.reactions[id][reaction];
          block.onclick = function () {
            reactionShortcut();
          };
          block.style.cursor = "pointer";
          block.className = reaction;
          reaction_display.appendChild(block);
          if (cache.reactions_voted[id][reaction] == true) {
            reaction_display_li[0].childNodes[0].style.backgroundColor =
              "#007bff";
          } else {
            reaction_display_li[0].childNodes[0].style.backgroundColor =
              "#6c757d";
          }
        }
        reaction_display.style.display = "block";
      }
    }

    // Add 1 vote of a reaction to a message
    function displayReactionAdd(id, reaction) {
      var target_message_div = document.getElementById(id.toString());
      if (target_message_div != null) {
        var reaction_display = target_message_div.getElementsByClassName(
          "reaction-display"
        )[0];
      } else {
        return;
      }
      if (!(id in cache.reactions)) {
        cache.reactions[id] = {};
        for (var i = 0; i < reactions_options.length; i++) {
          cache.reactions[id][reactions_options[i]] = 0;
        }
      }
      cache.reactions[id][reaction] += 1;
      var reaction_display_li = reaction_display.getElementsByClassName(
        reaction
      );
      if (reaction_display_li.length == 0) {
        var block = document.createElement("li");
        block.appendChild(document.createElement("span"));
        block.childNodes[0].innerText =
          reaction + " " + cache.reactions[id][reaction];
        block.onclick = function () {
          reactionShortcut();
        };
        block.style.cursor = "pointer";
        block.className = reaction;
        reaction_display.appendChild(block);
      } else {
        reaction_display_li[0].childNodes[0].innerText =
          reaction + " " + cache.reactions[id][reaction];
      }
      if (!(id in cache.reactions_voted)) {
        cache.reactions_voted[id] = {};
        for (var i = 0; i < reactions_options.length; i++) {
          cache.reactions_voted[id][reactions_options[i]] = false;
        }
      }
      if (cache.reactions_voted[id][reaction] == true) {
        reaction_display_li[0].childNodes[0].style.backgroundColor = "#007bff";
      } else {
        reaction_display_li[0].childNodes[0].style.backgroundColor = "#6c757d";
      }
      reaction_display.style.display = "block";
      localStorage.setItem(channel_id, JSON.stringify(cache));
    }

    // Remove 1 vote of a reaction from a message
    function displayReactionDel(id, reaction) {
      var target_message_div = document.getElementById(id.toString());
      if (target_message_div != null) {
        reaction_display = target_message_div.getElementsByClassName(
          "reaction-display"
        )[0];
      } else {
        return;
      }
      cache.reactions[id][reaction] -= 1;
      var reaction_display_li = reaction_display.getElementsByClassName(
        reaction
      );
      if (cache.reactions[id][reaction] <= 0) {
        reaction_display_li[0].remove();
      } else {
        reaction_display_li[0].childNodes[0].innerText =
          reaction + " " + cache.reactions[id][reaction];
      }
      localStorage.setItem(channel_id, JSON.stringify(cache));
    }

    function openChat() {
      document.getElementById("float-chatbox").style.visibility = "visible";
      document.getElementById("chat-window").style.visibility = "visible";
      expand_button.style.visibility = "hidden";
      chat_open = true;
      cache.message_read = $("#messages .message").length;
      localStorage.setItem(channel_id, JSON.stringify(cache));
    }

    function closeChat() {
      document.getElementById("float-chatbox").style.visibility = "hidden";
      document.getElementById("chat-window").style.visibility = "hidden";
      expand_button.style.visibility = "visible";
      if (!offline) {
        expand_button.style.backgroundColor = "#007bff";
        expand_button.innerText = "Chat (" + user_count + " Online)";
      }
      chat_open = false;
    }

    function reactionSelector() {
      var message_div = event.srcElement.parentNode;
      var id = parseInt(message_div.id, 10);
      message_div.appendChild(reaction_selector);
      reaction_selector.style.display = "block";
      reaction_selector.scrollIntoView({
        behavior: "smooth",
        block: "nearest",
      });
      message_div.onmouseleave = function () {
        reaction_selector.style.display = "none";
      };
      $(".reaction").unbind("click");
      $(".reaction").click(function () {
        message_div.onmouseleave = "unset";
        reaction_selector.style.display = "none";
        var reaction = event.srcElement.innerText;
        if (!(id in cache.reactions_voted)) {
          cache.reactions_voted[id] = {};
          for (var i = 0; i < reactions_options.length; i++) {
            cache.reactions_voted[id][reactions_options[i]] = false;
          }
          cache.reactions_voted[id][reaction] = true;
        } else {
          if (cache.reactions_voted[id][reaction] == true) {
            return;
          } else {
            cache.reactions_voted[id][reaction] = true;
          }
        }
        socket.emit("send reaction", { id: id, reaction: reaction });
        localStorage.setItem(channel_id, JSON.stringify(cache));
      });
    }

    function reactionShortcut() {
      if (offline) {
        return;
      }
      var elemt = event.srcElement;
      var reaction = elemt.innerText.slice(0, 2);
      var id = elemt.parentNode.parentNode.parentNode.id;
      if (cache.reactions_voted[id][reaction] == true) {
        elemt.style.backgroundColor = "#6c757d";
        cache.reactions_voted[id][reaction] = false;
        socket.emit("send reaction recall", { id: id, reaction: reaction });
      } else {
        elemt.style.backgroundColor = "#007bff";
        cache.reactions_voted[id][reaction] = true;
        socket.emit("send reaction", { id: id, reaction: reaction });
      }
      localStorage.setItem(channel_id, JSON.stringify(cache));
    }
  });
</script>
